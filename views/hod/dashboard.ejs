<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HOD Dashboard - Employee Transfer System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .sidebar {
            min-height: 100vh;
            background: #343a40;
            color: white;
            padding-top: 20px;
        }
        .sidebar a {
            color: white;
            text-decoration: none;
            padding: 10px 15px;
            display: block;
        }
        .sidebar a:hover {
            background: #495057;
        }
        .main-content {
            padding: 20px;
        }
        .status-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.9em;
        }
        .status-pending {
            background: #ffc107;
            color: #000;
        }
        .status-hr_approved {
            background: #28a745;
            color: white;
        }
        .status-hr_rejected {
            background: #dc3545;
            color: white;
        }
        .status-hod_approved {
            background: #28a745;
            color: white;
        }
        .status-hod_rejected {
            background: #dc3545;
            color: white;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-2 d-none d-md-block bg-dark sidebar min-vh-100">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active text-white" href="/hod/dashboard">
                                <i class="fas fa-home"></i> Dashboard
                            </a>
                        </li>
                        <!-- <li class="nav-item">
                            <a class="nav-link text-white" href="/hod/transfer-history">
                                <i class="fas fa-history"></i> Transfer History
                            </a>
                        </li> -->
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/auth/logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-10 ms-sm-auto px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">HOD Dashboard</h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <div class="btn-group me-2">
                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="refreshDashboard()">
                                <i class="fas fa-sync"></i> Refresh
                            </button>
                        </div>
                    </div>
                </div>

                <% if (messages.success) { %>
                    <div class="alert alert-success"><%= messages.success %></div>
                <% } %>

                <% if (messages.error) { %>
                    <div class="alert alert-danger"><%= messages.error %></div>
                <% } %>

                <!-- Pending Requests -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Pending Requests</h5>
                        <span class="badge bg-primary"><%= pendingRequests.length %> Requests</span>
                    </div>
                    <div class="card-body">
                        <% if (pendingRequests.length === 0) { %>
                            <p class="text-muted">No pending requests</p>
                        <% } else { %>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Employee</th>
                                            <th>Current Department</th>
                                            <th>Requested Department</th>
                                            <th>Status</th>
                                            <th>Submitted</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% pendingRequests.forEach(request => { %>
                                            <tr>
                                                <td><%= request.employee.name %></td>
                                                <td><%= request.currentDepartment %></td>
                                                <td><%= request.requestedDepartment %></td>
                                                <td>
                                                    <span class="badge bg-<%= getStatusBadgeColor(request.status) %>">
                                                        <%= request.status.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') %>
                                                    </span>
                                                </td>
                                                <td><%= new Date(request.createdAt).toLocaleDateString() %></td>
                                                <td>
                                                    <% if (request.status === 'hr_approved') { %>
                                                        <button class="btn btn-sm btn-success me-2" onclick="showApproveModal('<%= request._id %>')">
                                                            <i class="fas fa-check me-1"></i> Approve
                                                        </button>
                                                        <button class="btn btn-sm btn-danger" onclick="showRejectModal('<%= request._id %>')">
                                                            <i class="fas fa-times me-1"></i> Reject
                                                        </button>
                                                    <% } %>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } %>
                    </div>
                </div>

                <!-- Processed Requests -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Processed Transfer Requests</h5>
                    </div>
                    <div class="card-body">
                        <% if (processedRequests.length === 0) { %>
                            <p class="text-muted">No processed transfer requests.</p>
                        <% } else { %>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Employee</th>
                                            <th>Current Department</th>
                                            <th>Requested Department</th>
                                            <th>Status</th>
                                            <th>HR Manager</th>
                                            <th>Updated At</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% processedRequests.forEach(request => { %>
                                            <tr>
                                                <td><%= request.employee.name %></td>
                                                <td><%= request.currentDepartment %></td>
                                                <td><%= request.requestedDepartment %></td>
                                                <td>
                                                    <span class="badge bg-<%= getStatusBadgeColor(request.status) %>">
                                                        <%= request.status.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') %>
                                                    </span>
                                                </td>
                                                <td><%= request.assignedHR.name %></td>
                                                <td><%= new Date(request.updatedAt).toLocaleString() %></td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } %>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Approval Modal -->
    <div class="modal fade" id="approveModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Approve Transfer Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="approveForm">
                        <input type="hidden" id="approveRequestId" name="requestId">
                        <div class="mb-3">
                            <label for="approveComments" class="form-label">Comments</label>
                            <textarea class="form-control" id="approveComments" name="comments" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" onclick="submitApproval()">Approve</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Rejection Modal -->
    <div class="modal fade" id="rejectModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Reject Transfer Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="rejectForm">
                        <input type="hidden" id="rejectRequestId" name="requestId">
                        <div class="mb-3">
                            <label for="rejectComments" class="form-label">Reason for Rejection</label>
                            <textarea class="form-control" id="rejectComments" name="comments" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="submitRejection()">Reject</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentRequestId = null;
        let finalizeModal;
        let approveModal;
        let rejectModal;

        document.addEventListener('DOMContentLoaded', function() {
            // Initialize modals only if they exist
            const finalizeModalElement = document.getElementById('finalizeModal');
            const approveModalElement = document.getElementById('approveModal');
            const rejectModalElement = document.getElementById('rejectModal');

            if (finalizeModalElement) {
                finalizeModal = new bootstrap.Modal(finalizeModalElement);
            }
            if (approveModalElement) {
                approveModal = new bootstrap.Modal(approveModalElement);
            }
            if (rejectModalElement) {
                rejectModal = new bootstrap.Modal(rejectModalElement);
            }
        });

        function showReviewModal(requestId) {
            currentRequestId = requestId;
            const reviewModalElement = document.getElementById('reviewModal');
            if (reviewModalElement) {
                const modal = new bootstrap.Modal(reviewModalElement);
                modal.show();
            }
        }

        function showFinalizeModal(requestId) {
            currentRequestId = requestId;
            if (finalizeModal) {
                finalizeModal.show();
            }
        }

        function submitReview(status) {
            if (!currentRequestId) return;
            
            const comments = document.querySelector('#reviewForm textarea[name="comments"]').value;
            
            fetch(`/hod/transfer-request/${currentRequestId}/review`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status, comments })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    window.location.reload();
                } else {
                    alert(data.error || 'Error processing request');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error processing request');
            });
        }

        function submitFinalize() {
            if (!currentRequestId) return;
            
            const comments = document.querySelector('#finalizeForm textarea[name="comments"]').value;
            
            fetch(`/hod/transfer-request/${currentRequestId}/finalize`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ comments })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    window.location.reload();
                } else {
                    console.error('Error details:', data.details);
                    alert(data.error + (data.details ? '\n\nDetails: ' + data.details : ''));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error processing request. Please check the console for details.');
            });
        }

        function refreshDashboard() {
            window.location.reload();
        }

        function showApproveModal(requestId) {
            document.getElementById('approveRequestId').value = requestId;
            if (approveModal) {
                approveModal.show();
            }
        }

        function showRejectModal(requestId) {
            document.getElementById('rejectRequestId').value = requestId;
            if (rejectModal) {
                rejectModal.show();
            }
        }

        async function submitApproval() {
            const requestId = document.getElementById('approveRequestId').value;
            const comments = document.getElementById('approveComments').value;

            try {
                const response = await fetch(`/hod/transfer-request/${requestId}/review`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        status: 'hod_approved',
                        comments: comments
                    })
                });

                const data = await response.json();
                if (response.ok) {
                    location.reload();
                } else {
                    alert(data.error || 'Error approving request');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error approving request');
            }
        }

        async function submitRejection() {
            const requestId = document.getElementById('rejectRequestId').value;
            const comments = document.getElementById('rejectComments').value;

            if (!comments) {
                alert('Please provide a reason for rejection');
                return;
            }

            try {
                const response = await fetch(`/hod/transfer-request/${requestId}/review`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        status: 'hod_rejected',
                        comments: comments
                    })
                });

                const data = await response.json();
                if (response.ok) {
                    location.reload();
                } else {
                    alert(data.error || 'Error rejecting request');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error rejecting request');
            }
        }
    </script>
</body>
</html> 